# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
.venv/
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
mlflow-model/conda.yaml
mlflow-model/MLmodel
mlflow-model/model.pkl
mlflow-model/python_env.yaml
mlflow-model/requirements.txt
model/conda.yaml
model/MLmodel
model/model.pkl
model/python_env.yaml
model/requirements.txt
mlruns/0/meta.yaml
mlruns/0/datasets/4b9683708e0bc9555b4203773cabbd1c/meta.yaml
mlruns/0/datasets/88c4ce91bb483faf648903bc609697e8/meta.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/meta.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/estimator.html
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/training_confusion_matrix.png
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/training_precision_recall_curve.png
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/training_roc_curve.png
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/model/conda.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/model/MLmodel
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/model/model.pkl
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/model/python_env.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/artifacts/model/requirements.txt
mlruns/0/fbffae65f08847d5a43cb80088859788/inputs/bf6c0d093edf046b9c85d0fde02b188c/meta.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/inputs/ea17b86c353abfa19ee3c378a7ca5a81/meta.yaml
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_accuracy_score
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_f1_score
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_log_loss
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_precision_score
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_recall_score
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_roc_auc
mlruns/0/fbffae65f08847d5a43cb80088859788/metrics/training_score
mlruns/0/fbffae65f08847d5a43cb80088859788/params/C
mlruns/0/fbffae65f08847d5a43cb80088859788/params/class_weight
mlruns/0/fbffae65f08847d5a43cb80088859788/params/dual
mlruns/0/fbffae65f08847d5a43cb80088859788/params/fit_intercept
mlruns/0/fbffae65f08847d5a43cb80088859788/params/intercept_scaling
mlruns/0/fbffae65f08847d5a43cb80088859788/params/l1_ratio
mlruns/0/fbffae65f08847d5a43cb80088859788/params/max_iter
mlruns/0/fbffae65f08847d5a43cb80088859788/params/multi_class
mlruns/0/fbffae65f08847d5a43cb80088859788/params/n_jobs
mlruns/0/fbffae65f08847d5a43cb80088859788/params/penalty
mlruns/0/fbffae65f08847d5a43cb80088859788/params/random_state
mlruns/0/fbffae65f08847d5a43cb80088859788/params/solver
mlruns/0/fbffae65f08847d5a43cb80088859788/params/tol
mlruns/0/fbffae65f08847d5a43cb80088859788/params/verbose
mlruns/0/fbffae65f08847d5a43cb80088859788/params/warm_start
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/estimator_class
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/estimator_name
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.autologging
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.log-model.history
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.runName
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.source.git.commit
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.source.name
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.source.type
mlruns/0/fbffae65f08847d5a43cb80088859788/tags/mlflow.user
experimentation/data/diabetes-dev - Copy.csv
